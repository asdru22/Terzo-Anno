package block.moonlit_monolith

predicate value_check.night = {
  "condition": "minecraft:time_check",
  "value": {
    "min": 13000,
    "max": 22999
  }
}

append(*block.timers.10_second_clock){
  if(entity @s[tag=*moonlit_monolith.fixed]) function main
}

function main {
  if(entity @s[tag=!*moonlit_monolith.night] && predicate night) return run function night

  if(entity @s[tag=*moonlit_monolith.night] &! predicate night) function day
}

function night{
  store result score #moon_phase *dummy run time query day
  operation #moon_phase *dummy %= 8 // equivalente a scoreboard players operation #moon_phase haywire.dummy %= #8 haywire.dummy, e da qualche parte verra messo il comando scoreboard players set #8 haywire.dummy 8

  // 0. Full moon (4/4)
  // 1. Waning gibbous (3/4)
  // 2. Last quarter (2/4)
  // 3. Waning crescent (1/4)
  // 4. New moon (0/4)
  // 5. Waxing crescent (1/4) 
  // 6. First quarter (2/4)
  // 7. Waxing gibbous (3/4)

  item modify entity @s contents {"function":"minecraft:set_custom_data","tag":"{*: {night:true}}"}
  tag @s add *moonlit_monolith.night
  on passengers if(entity @s[type=item_display]) function {
    item modify entity @s contents {"function":"minecraft:set_custom_data","tag":"{*:{moonstone:\"idle\"}}"}
    data merge entity @s {transformation:{translation:[0.0f,0.8f,0.0f],left_rotation:[0.0f,0.0f,0.0f,1.0f],scale:[1f,1f,1f],right_rotation:[0.0f,0.0f,0.0f,1.0f]},interpolation_duration:15,start_interpolation:0}
    tag @s add *moonlit_monolith.moonstone_schedule_night
    schedule function {
      as @e[type=item_display,tag=*moonlit_monolith.moonstone_schedule_night] at @s run function *block.moonlit_monolith.moonstone.emerge
    } 15t
  }

  playsound *block.moonlit_monolith.moonstone_emerging block @a[distance=..16]
}

sounds["block.moonlit_monolith.moonstone_emerging"] = {
    "sounds":[
      {
        "name":"haywire:block/moonlit_monolith/moonstone_emerging"
      }
    ],
    "subtitle": "subtitles.haywire.block.moonlit_monolith.moonstone_emerging"
  }

lang["subtitles.haywire.block.moonlit_monolith.moonstone_emerging"] = "Moonstone Emerges"

sounds["block.moonlit_monolith.moonstone_vanishing"] = {
    "sounds":[
      {
        "name":"haywire:block/moonlit_monolith/moonstone_vanishing"
      }
    ],
    "subtitle": "subtitles.haywire.block.moonlit_monolith.moonstone_vanishing"
}

lang["subtitles.haywire.block.moonlit_monolith.moonstone_vanishing"] = "Moonstone Vanishes"

function day {
  // Effects
  if(entity @s[tag=*moonlit_monolith.balemoon]) function reset_balemoon
  playsound *block.moonlit_monolith.moonstone_vanishing block @a[distance=..16] ~ ~ ~ 1 1.5
  
  //Reset data
  item modify entity @s contents {"function":"minecraft:set_custom_data","tag":"{*:{night:false}}"}
  tag @s remove *moonlit_monolith.night
  tag @s remove *moonlit_monolith.balemoon

  on passengers if(entity @s[type=item_display]) function *block.moonlit_monolith.moonstone.day
}

function reset_balemoon {
  fillbiome ~-15 ~-15 ~-15 ~15 ~15 ~15 minecraft:plains
  function *technical.string_uuid.init
  data remove storage *temp root.macro_input
  data modify storage *temp root.macro_input.string_uuid set from storage haywire:temp root.string_uuid
  
  with storage *temp root.macro_input {
    $data remove storage *storage root.balemoon[{moonlit_monolith:$(string_uuid)}]
  }
}